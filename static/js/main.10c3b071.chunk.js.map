{"version":3,"sources":["components/Error.js","components/Formulario.js","components/Imagen.js","components/ListadoImagenes.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Formulario","guardarBusqueda","useState","termino","guardarTermino","error","guardarError","onSubmit","e","preventDefault","trim","type","placeholder","onChange","target","value","Imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","rel","ListadoImagen","imagenes","map","key","id","Container","busqueda","guardarImagenes","paginaactual","guardarPaginaActual","totalPaginas","guardarTotalPaginas","useEffect","a","imagenesPorPagina","url","fetch","respuesta","json","resultado","hits","calcularTotalPaginas","Math","ceil","totalHits","document","querySelector","scrollIntoView","behavior","consultarAPI","ListadoImagenes","onClick","nuevaPaginaActual","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10c3b071.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Error = ({mensaje}) => {\n  return ( \n    <p className='my-3 p-4 text-center alert alert-danger'>\n        {mensaje}\n    </p>\n   );\n}\n \nexport default Error;","import React, { useState } from 'react';\nimport Error from './Error';\n\nconst Formulario = ({ guardarBusqueda }) => {\n \n  const [ termino,  guardarTermino ] = useState('');\n  const [ error, guardarError ] = useState(false); \n\n  const buscarImagenes = e => {\n    e.preventDefault();\n\n    // Validar\n    if(termino.trim() === ''){\n        guardarError(true)\n        return;\n    }\n\n    guardarError(false)\n\n    // Enviar el termino de búsqueda hacia el componente principal\n    guardarBusqueda(termino)\n  }\n\n  return ( \n    <form\n      onSubmit={buscarImagenes}\n    >\n      <div className='row'>\n        <div className='form-group col-md-8'>\n            <input \n                type='text'\n                className='form-control form-control-lg'\n                placeholder='Busca una imágen, ejemplo: app, café, futbol'\n                onChange={e => guardarTermino(e.target.value)}\n            />\n        </div>\n        <div className='form-group col-md-4'>\n            <input \n                type='submit'\n                className='btn btn-lg btn-danger btn-block'\n                placeholder='Busca una imágen, ejemplo: app, café, futbol'\n                value='Buscar'\n            />\n        </div>\n      </div>\n      {error ? <Error mensaje='Agrega un término de búsqueda' /> : null}\n    </form>\n   );\n}\n \nexport default Formulario;","import React from 'react'\n\nconst Imagen = ({imagen}) => {\n\n  // Extraer las variables\n  const { largeImageURL, likes, previewURL, tags, views } = imagen;\n\n  return ( \n    <div className='col-12 col-sm-6 col-md-4 col-lg-3 mb-4'>\n      <div className='card'>\n        <img src={previewURL} alt={tags}  className='card-img-top'/>\n        <div className='card-body'>\n          <p className='card-text'>{likes} Me Gusta</p>\n          <p className='card-text'>{views} Vistas</p>\n        </div>\n        <div className='card-footer'>\n          <a\n            href={largeImageURL}\n            target='_blank'\n            rel='noopener noreferrer'\n            className='btn btn-primary btn-block'\n          >Ver Imagen</a>\n\n        </div>\n\n      </div>\n    </div>\n   );\n}\n \nexport default Imagen;"," import React from 'react';\n import Imagen from './Imagen';\n \n const ListadoImagen = ({imagenes}) => {\n   return ( \n     <div className='col-12 p-5 row'>\n        {imagenes.map(imagen => (\n          <Imagen \n            key={imagen.id}\n            imagen={imagen}\n          />\n        ))}\n\n     </div>\n    );\n }\n  \n export default ListadoImagen;","import React, { useState, useEffect } from 'react';\nimport Formulario from './Formulario';\nimport ListadoImagenes from './ListadoImagenes';\n\nconst Container = () => {\n\n   // State de la app\n   const [ busqueda, guardarBusqueda ] = useState(''); \n   const [ imagenes, guardarImagenes ] = useState([]);\n   const [ paginaactual, guardarPaginaActual ] = useState(1);\n   const [ totalPaginas, guardarTotalPaginas ]  = useState(1); \n\n   useEffect(() => {\n     const consultarAPI = async () => {\n\n      if(busqueda === '') return;\n\n      const imagenesPorPagina = 30;\n      const key =  '15100229-4a3577dcf7dc0babcd57cba53';\n      const url = `https://pixabay.com/api/?key=${key}&q=${busqueda}&per_page=${imagenesPorPagina}&page=${paginaactual }`;\n \n      const respuesta = await fetch(url);\n      const resultado = await respuesta.json();\n\n      guardarImagenes(resultado.hits);\n\n      // Calcular el total de páginas\n\n      const calcularTotalPaginas = Math.ceil(resultado.totalHits / imagenesPorPagina)\n      guardarTotalPaginas(calcularTotalPaginas)\n\n      // Mover la pantalla hacia arriba\n      const jumbotron = document.querySelector('.jumbotron');\n      jumbotron.scrollIntoView({behavior: 'smooth'})\n     }\n     \n     consultarAPI();\n\n   }, [busqueda, paginaactual])\n\n   // Definir la función para ir a la página anterior \n\n   const paginaAnterior = () => {\n     const nuevaPaginaActual =  paginaactual - 1;\n\n     if(nuevaPaginaActual === 0) return;\n\n     guardarPaginaActual(nuevaPaginaActual);\n   }; \n\n   const paginaSiguiente = () => {\n    const nuevaPaginaActual =  paginaactual + 1;\n\n    if(nuevaPaginaActual > totalPaginas) return;\n\n    guardarPaginaActual(nuevaPaginaActual);\n   }\n\n  return ( \n    <div className='container'>\n      <div className='jumbotron'>\n        <p className='lead text-center'>Buscador de imágenes</p>\n        <Formulario \n          guardarBusqueda={guardarBusqueda}\n        />\n      </div>\n      <div className='row justify-content-center'>\n        <ListadoImagenes \n          imagenes={imagenes}\n        /> \n      \n      {(paginaactual === 1) \n      ? \n          null \n      :   \n          (<button\n              type='button'\n              className='bbtn btn-info mr-1'\n              onClick={paginaAnterior}\n          >&laquo;Anterior </button>)}\n\n        {(paginaactual === totalPaginas)\n        ?\n          null\n        :\n          (<button\n              type='button'\n              className='bbtn btn-info'\n              onClick={paginaSiguiente}\n          >Siguiente &raquo;</button>)\n        }\n\n        \n      </div>\n    </div>\n   );\n}\n \nexport default Container;","import React from 'react';\nimport Container from './components/Container';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\n \nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path='/' component={Container} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}